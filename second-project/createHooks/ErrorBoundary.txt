//tratando erros e os limitando/personalizando na tela com ErrorBoundary

import { Component, useState } from 'react';
import PropTypes from 'prop-types';

class ErrorBoundary extends Component {
  constructor(props) {
    super(props);
    this.state = { hasError: false };
  }

  static getDerivedStateFromError(error) {
    return { hasError: true };
  }

  componentDidCatch(error, errorInfo) {
    console.log(error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      return <div>AAAAAAAAAAAAAAAAAAAAAA</div>;
    }

    return this.props.children;
  }
}

ErrorBoundary.propTypes = {
  children: PropTypes.node,
};

const WhenError = () => {
  return <div>Erro inesperado ocorreu, reinicie a p√°gina</div>;
};

export default function App() {
  const [conunt, setCount] = useState(0);

  const handleClick = () => {
    if (conunt > 3) {
      throw new Error('Engonha');
    }
    setCount((c) => c + 1);
  };

  return (
    <ErrorBoundary fallback={WhenError}>
      <div onClick={handleClick}>Div sem erro algum</div>
    </ErrorBoundary>
  );
}
